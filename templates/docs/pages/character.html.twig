{% extends "docs/index.html.twig"  %}
{% import "docs/macros.html.twig" as docs %}
{% set section = 9 %}


{% block doc %}

    <h1>Character</h1>

    <p>
        Search and retrieve character data from The Lodestone. Providing useful information
        such as character profile data, minions and mounts obtained, achievements obtained and their relative
        dates. Character friends, their free company, pvp team and much more!
    </p>

    <br><br>

    {# Search #}
    {{ docs.api('/character/search', '/character/search?name=[name]&server=[server]', 'search') }}
    <p>
        Search for a character on **The Lodestone**. This does not search XIVAPI but instead
        it goes directly to lodestone so the response will be "real-time". Responses are cached for 1 hour,
        it is important to know that Lodestone has a ~6 hour varnish and CDN cache.
    </p>

    {{ docs.commonParamsSearch() }}

    {{ docs.gap() }}

    {# GET #}
    {{ docs.api('/character/[lodestone_id]', '/character/730968', 'character') }}
    <h6>Restricted Usage</h6>
    <p class="note">
        A single source (User or Developer) can <strong>add</strong> a maximum of 100 characters within a 2 hour period,
        if you spam add thousands of characters then expect them all to be deleted, if you need thousands then
        please message the discord as a pre-warning.
        <br><br>
        Once a character is on XIVAPI this limit is not checked, it is only for the <strong>very 1st request</strong>,
        which can be done anyone (your character may already exist on the service!)
    </p>

    <p>
        Get Character data, due to the nature of availability on the service this endpoint
        will return either populated data or nothing, you will have to check the <code>Info</code> response to
        see the current state. If the character does not exist on XIVAPI then this first request will
        return the state value 1 and the character will be added within the next few minutes. Query
        the endpoint again after a few minutes and it should contain data.
    </p>

    <h4>Params</h4>

    <table class="param-table">
        <thead>
        <tr>
            <th width="25%">Param</th>
            <th width="75%">Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>extended</td>
            <td>If set to 1, the API will return more data in the response by extending out the data IDs to useful objects.</td>
        </tr>
        <tr>
            <td>data</td>
            <td>

                <p>By default only the `Character` data will return, you can request more data using the `data` query.</p>

                <h6>data</h6>
                <code>
                    {{ app.request.getSchemeAndHttpHost() }}/character/730968?data=AC,FR,FC,FCM,PVP
                </code>
                <p>Pass a long a comma separated list of codes that relate to specific data sets you would like
                    to fetch, these are as follows:</p>

                <table class="mini-table param-table">
                    <tbody>
                    <tr>
                        <td>AC</td>
                        <td>Achievements</td>
                    </tr>
                    <tr>
                        <td>FR</td>
                        <td>Friends List</td>
                    </tr>
                    <tr>
                        <td>FC</td>
                        <td>Free Company (if added to the system)</td>
                    </tr>
                    <tr>
                        <td>FCM</td>
                        <td>Free Company Members (if added to the system)</td>
                    </tr>
                    <tr>
                        <td>PVP</td>
                        <td>PVP Team (if added to the system)</td>
                    </tr>
                    </tbody>
                </table>

            </td>
        </tr>
        </tbody>
    </table>

    <p>
        Once you have the data you need, you can further reduce the data using the `columns` query
    </p>

    {{ docs.commonInfoStatusInformation() }}

    {{ docs.gap() }}

    {# Verification #}
    {{ docs.api('/character/[lodestone_id]/verification', '/character/730968/verification', 'verification') }}
    <p>
        Calls Lodestone directly to retrieve the biography, this can be used for verifying character ownership.
        The response for this request will cache for 5 seconds to reduce spam.
    </p>

    <h4>Params</h4>

    <table class="params-table">
        <thead>
        <tr>
            <th width="25%">Param</th>
            <th width="75%">Description</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>token</td>
            <td>The token to test against, if the token is found then `Pass` will be true.</td>
        </tr>
        </tbody>
    </table>

    {{ docs.gap() }}

    {# Update #}
    {{ docs.api('/character/[lodestone_id]/update', '/character/730968/update', 'update') }}
    <p>
        Requests a character to be updated, this puts them at the front of the queue. You can do this once
        every 12 hours. Please note Lodestone has a "roughly" 6 hour player cache as well as Lodestone itself
        having a cache. The best way for a character to update is to logout and wait over night.
    </p>
    <p>You will receive a true/false (1/0) response if this was successful:</p>
    <table class="param-table mini-table">
        <thead>
        <tr>
            <th width="10%">Response</th>
            <th>Information</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>1</td>
            <td>Character added to the front of the queue.</td>
        </tr>
        <tr>
            <td>0</td>
            <td>Character cannot be updated at this time.</td>
        </tr>
        </tbody>
    </table>

{% endblock %}
